name: CI

on: [ push, pull_request ]

jobs:
  code-analysis:
    name: "Code Analysis (JDK: ${{ matrix.jdk }})"
    strategy:
      matrix:
        jdk: [ 1.8, 11 ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/ltsmin
            ~/.m2
            !~/.m2/repository/com/github/mtf90
          key: cache-code-analysis-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-code-analysis-
      - name: List Cache
        shell: bash
        run: |
          find ~/.m2
          find ~/ltsmin
      - name: Set up LTSmin
        env:
          LTSMIN_VERSION: v3.1.0
          LTSMIN_OS: linux
        shell: bash
        run: |
          $GITHUB_WORKSPACE/.github/install-ltsmin.sh
          echo "~/ltsmin/${{ env.LTSMIN_VERSION }}/bin" >> $GITHUB_PATH
      - name: Check LTSmin
        shell: bash
        run: ltsmin-convert --version
        continue-on-error: true # binary returns 255 on success
      - name: Set up GraphViz
        run: sudo apt-get install graphviz
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}
      - name: Run Maven
        run: mvn -B install

#  integration-tests:
#    name: "Integration Tests (JDK: ${{ matrix.jdk }}, OS: ${{ matrix.os }})"
#    needs: [ code-analysis ]
#    strategy:
#      matrix:
#        jdk: [ 1.8, 11 ]
#        os: [ ubuntu-latest, windows-latest, macOS-latest ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: ${{ matrix.jdk }}
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: cache-integration-tests-${{ hashFiles('**/pom.xml') }}
#      - name: Run Maven
#        run: mvn '-Dmaven.compiler.source=${{ matrix.jdk }}' '-Dmaven.compiler.target=${{ matrix.jdk }}' -B package

  coverage:
    name: "Coverage"
    needs: [ code-analysis ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2
            ~/ltsmin
          key: cache-coverage-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-coverage-
      - name: List Cache
        shell: bash
        run: find ~/.m2
      - name: Set Branch Name and PR Number # see https://github.com/trautonen/coveralls-maven-plugin/issues/136
        id: refs
        env:
          BRANCH_NAME_OR_REF: ${{ github.head_ref || github.ref }}
        run: |
          echo "::set-output name=branch_name::${BRANCH_NAME_OR_REF#refs/heads/}"
          echo "::set-output name=pr_number::$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")"
      - name: Run Coverage
        env:
          CI_NAME: Github Actions
          CI_BUILD_ID: ${{ github.run_id }}
          CI_BUILD_NUMBER: ${{ github.run_number }}
          CI_BUILD_URL: https://github.com/${{ github.repository }}/commit/${{ github.event.after }}/checks
          CI_BRANCH: ${{ steps.refs.outputs.branch_name }}
          CI_PULL_REQUEST: ${{ steps.refs.outputs.pr_number }}
        run: |
          mvn -B package
          mvn -B coveralls:report

#  deploy:
#    name: "Deploy"
#    if: github.event_name != 'pull_request'
#    needs: [ integration-tests ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: cache-deploy-${{ hashFiles('**/pom.xml') }}
#          restore-keys: cache-deploy-
#      - name: Run Maven
#        run: mvn -B -s $GITHUB_WORKSPACE/.github/settings.xml package